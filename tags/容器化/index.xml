<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>容器化 on 博客</title>
    <link>https://huangruiying.github.io/tags/%E5%AE%B9%E5%99%A8%E5%8C%96/</link>
    <description>Recent content in 容器化 on 博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 13 Mar 2024 16:45:40 +0800</lastBuildDate><atom:link href="https://huangruiying.github.io/tags/%E5%AE%B9%E5%99%A8%E5%8C%96/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker教程 - FastDFS的部署</title>
      <link>https://huangruiying.github.io/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6/docker-%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8/docker%E6%95%99%E7%A8%8B-fastdfs%E7%9A%84%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Wed, 13 Mar 2024 16:45:40 +0800</pubDate>
      
      <guid>https://huangruiying.github.io/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6/docker-%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8/docker%E6%95%99%E7%A8%8B-fastdfs%E7%9A%84%E9%83%A8%E7%BD%B2/</guid>
      <description>查看镜像 docker search mysql
拉取镜像 docker pull mysql:5.6
查看是否成功 docker images | grep mysql
启动 docker rm $(docker ps -a -q) docker run -m 500m -d --name ryan_mysql -p 3306:3306 -v $PWD/conf:/etc/mysql/conf.d -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=hry920311. docker.io/mysql:5.6 docker run -d --name ryan_mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root docker.io/mysql:5.6 bash
进入数据库 docker exec -it [ryan_mysql] bash
错误 /usr/bin/docker-current: Error response from daemon: driver failed programming external connectivity on endpoint mysql1 (6e5461f607ea31b5a9b88ab041cdef538758bb6420c46fd450e3ad9800f78810): (iptables failed: iptables &amp;ndash;wait -t nat -A DOCKER -p tcp -d 0/0 &amp;ndash;dport 3306 -j DNAT &amp;ndash;to-destination 172.</description>
    </item>
    
    <item>
      <title>Docker教程 - MySQL的部署</title>
      <link>https://huangruiying.github.io/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6/docker-%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8/docker%E6%95%99%E7%A8%8B-mysql%E7%9A%84%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Wed, 13 Mar 2024 16:45:40 +0800</pubDate>
      
      <guid>https://huangruiying.github.io/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6/docker-%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8/docker%E6%95%99%E7%A8%8B-mysql%E7%9A%84%E9%83%A8%E7%BD%B2/</guid>
      <description>部署 查看镜像 docker search mysql
拉取镜像 docker pull mysql:5.6
查看是否成功 docker images | grep mysql
启动 docker rm $(docker ps -a -q) docker run -m 500m -d --name ryan_mysql -p 3306:3306 -v $PWD/conf:/etc/mysql/conf.d -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=hry920311. docker.io/mysql:5.6 docker run -d --name ryan_mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root docker.io/mysql:5.6 bash
启动脚本 #!/bin/bash # # author: huangruiying # -------------------- # docker(mysql) runner # -------------------- # 1.stop docker stop ryan_mysql # 2.</description>
    </item>
    
    <item>
      <title>Docker教程 - 基础的安装与使用</title>
      <link>https://huangruiying.github.io/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6/docker-%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8/docker%E6%95%99%E7%A8%8B-%E5%9F%BA%E7%A1%80%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 13 Mar 2024 16:45:40 +0800</pubDate>
      
      <guid>https://huangruiying.github.io/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6/docker-%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8/docker%E6%95%99%E7%A8%8B-%E5%9F%BA%E7%A1%80%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid>
      <description>1.安装docker 安装 yum install docker-io -y
查看版本 docker -v
启动 service docker start
设置开机启动 chkconfig docker on
2.配置docker 因为国内访问 Docker Hub 较慢, 可以使用腾讯云提供的国内镜像源, 加速访问 Docker Hub
设置docker库 echo &amp;#34;OPTIONS=&amp;#39;--registry-mirror=https://mirror.ccs.tencentyun.com&amp;#39;&amp;#34; &amp;gt;&amp;gt; /etc/sysconfig/docker systemctl daemon-reload service docker restart 3.docker实操 下载镜像 docker pull centos
查看当前镜像列表 （解释列信息） docker images
REPOSITORY TAG IMAGE ID CREATED SIZE REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/centos latest 75835a67d134 6 weeks ago 200 MB 拓展： docker images --format &amp;quot;table {{.</description>
    </item>
    
    <item>
      <title>Docker教程 - 进入容器的脚本</title>
      <link>https://huangruiying.github.io/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6/docker-%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8/docker%E6%95%99%E7%A8%8B-%E8%BF%9B%E5%85%A5%E5%AE%B9%E5%99%A8%E7%9A%84%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Wed, 13 Mar 2024 16:45:40 +0800</pubDate>
      
      <guid>https://huangruiying.github.io/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6/docker-%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8/docker%E6%95%99%E7%A8%8B-%E8%BF%9B%E5%85%A5%E5%AE%B9%E5%99%A8%E7%9A%84%E8%84%9A%E6%9C%AC/</guid>
      <description>#!/bin/bash # author: huangruiying # 通过容器名称进入容器 enter_container.sh # -------------------------------------------- # $0 : filename # $n : get param value by n(param index) # $* : param array # $# : param count # -------------------------------------------- # docker exec script # -------------------------------------------- function hit_container_name(){ echo -e &amp;#34;&amp;gt;&amp;gt;&amp;gt; find $1 from current running container list !&amp;#34; running_container_names=$(docker ps --format &amp;#34;table {{.Names}}&amp;#34;) for i in $running_container_names do if [[ $i == &amp;#34;$1&amp;#34; ]] then echo -e &amp;#34;&amp;gt;&amp;gt;&amp;gt; hit container $1 !</description>
    </item>
    
  </channel>
</rss>
