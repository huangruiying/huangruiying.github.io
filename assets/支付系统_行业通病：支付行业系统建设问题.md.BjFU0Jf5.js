import{_ as e,c as t,o as r,a1 as i}from"./chunks/framework.CPsxJxQM.js";const p=JSON.parse('{"title":"行业通病：支付行业系统建设问题","description":"","frontmatter":{},"headers":[],"relativePath":"支付系统/行业通病：支付行业系统建设问题.md","filePath":"支付系统/行业通病：支付行业系统建设问题.md"}'),l={name:"支付系统/行业通病：支付行业系统建设问题.md"};function o(h,a,n,d,_,s){return r(),t("div",null,a[0]||(a[0]=[i('<h1 id="行业通病-支付行业系统建设问题" tabindex="-1">行业通病：支付行业系统建设问题 <a class="header-anchor" href="#行业通病-支付行业系统建设问题" aria-label="Permalink to &quot;行业通病：支付行业系统建设问题&quot;">​</a></h1><h2 id="超时关单-大单量的情况下如何设计超时关单" tabindex="-1">超时关单：大单量的情况下如何设计超时关单 <a class="header-anchor" href="#超时关单-大单量的情况下如何设计超时关单" aria-label="Permalink to &quot;超时关单：大单量的情况下如何设计超时关单&quot;">​</a></h2><p>两个方面</p><ul><li>一个是用户下完单后未支付，并且后续不会再打开该订单进行支付的场景，这种直接使用分片关单任务进行操作即可。不用担心因为处理不及时导致的支付问题。</li><li>另一种场景就是用户再次对该支付单进行支付，并且时间刚好卡在超时时间之后，关单任务处理之前。这种就要求支付单上有一个字段标识超时时刻，用于用户再次支付时的对比。</li></ul><h5 id="q-什么场景会用到严格控制超时时间-让用户支付成功不好吗" tabindex="-1">Q: 什么场景会用到严格控制超时时间，让用户支付成功不好吗？ <a class="header-anchor" href="#q-什么场景会用到严格控制超时时间-让用户支付成功不好吗" aria-label="Permalink to &quot;Q: 什么场景会用到严格控制超时时间，让用户支付成功不好吗？&quot;">​</a></h5><p>订单锁定库存，支付单不支付的话会导致库存长时间占用。比如抢券。</p><h2 id="初次下单-唯一id与防重下单" tabindex="-1">初次下单：唯一ID与防重下单 <a class="header-anchor" href="#初次下单-唯一id与防重下单" aria-label="Permalink to &quot;初次下单：唯一ID与防重下单&quot;">​</a></h2><p>生成唯一ID，防止单据冲突，防重复提交。</p><h2 id="重复下单-最大待支付订单量-重复新创建" tabindex="-1">重复下单：最大待支付订单量（重复新创建） <a class="header-anchor" href="#重复下单-最大待支付订单量-重复新创建" aria-label="Permalink to &quot;重复下单：最大待支付订单量（重复新创建）&quot;">​</a></h2><p>同一用户，一段时间内允许的最大待支付单量</p><ol><li>防止下单失败，用户一直下单</li><li>降低服务压力</li></ol><h2 id="通道稳定性建设" tabindex="-1">通道稳定性建设 <a class="header-anchor" href="#通道稳定性建设" aria-label="Permalink to &quot;通道稳定性建设&quot;">​</a></h2><p>通道重路由，失败快速熔断。 通道自动化管理(自动上下线)。 多通道备份(通道异常时自动走备用)。</p><h2 id="支付冷静期" tabindex="-1">支付冷静期 <a class="header-anchor" href="#支付冷静期" aria-label="Permalink to &quot;支付冷静期&quot;">​</a></h2><p>免密支付冷却期：再次签约时发现解约后，未收到回告，拦截1天。</p><h2 id="支付偏好" tabindex="-1">支付偏好 <a class="header-anchor" href="#支付偏好" aria-label="Permalink to &quot;支付偏好&quot;">​</a></h2><p>用户每次支付后，写入当前支付方式到缓存，下次支付前，回显该值。</p>',17)]))}const u=e(l,[["render",o]]);export{p as __pageData,u as default};
