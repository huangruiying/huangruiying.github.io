import{_,C as A,c as o,o as E,j as e,b as B,a1 as i,a as r,w as d,G as l,a2 as n}from"./chunks/framework.CPsxJxQM.js";const D=JSON.parse('{"title":"配置化收单路由","description":"","frontmatter":{},"headers":[],"relativePath":"支付系统/规则路由建设.md","filePath":"支付系统/规则路由建设.md"}'),u={name:"支付系统/规则路由建设.md"};function p(s,t,m,c,h,C){const a=A("Mermaid");return E(),o("div",null,[t[1]||(t[1]=e("h1",{id:"配置化收单路由",tabindex:"-1"},[r("配置化收单路由 "),e("a",{class:"header-anchor",href:"#配置化收单路由","aria-label":'Permalink to "配置化收单路由"'},"​")],-1)),t[2]||(t[2]=e("p",null,"灵活实时配置收单场景，引流到指定商户号。",-1)),t[3]||(t[3]=e("h2",{id:"",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#","aria-label":'Permalink to ""'},"​")],-1)),(E(),B(n,null,{default:d(()=>[l(a,{id:"mermaid-9",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20subgraph%20%E8%A7%84%E5%88%99%E8%B7%AF%E7%94%B1%E4%BD%93%E7%B3%BB%0A%20%20%20%20%20%20%20%20E%5Broute_pre_mapping%3Cbr%3E%E8%B7%AF%E7%94%B1%E5%89%8D%E7%BD%AE%E6%98%A0%E5%B0%84%E8%A1%A8%5D%0A%20%20%20%20%20%20%20%20B%5Broute_trade_rule%3Cbr%3E%E5%95%86%E6%88%B7%E8%B7%AF%E7%94%B1%E8%A7%84%E5%88%99%E8%A1%A8%5D%20--%3E%20C%5Broute_trade_rule_detail%3Cbr%3E%E5%95%86%E6%88%B7%E8%B7%AF%E7%94%B1%E8%A7%84%E5%88%99%E8%AF%A6%E6%83%85%E8%A1%A8%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20subgraph%20%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%8F%91%E5%B8%83%0A%20%20%20%20%20%20%20%20D%5Broute_trade_mapping%3Cbr%3E%E4%BA%A4%E6%98%93%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE%E8%A1%A8%5D%20--%3E%20G%5Broute_trade_mapping_publish_plan%3Cbr%3E%E8%B7%AF%E7%94%B1%E5%8F%91%E5%B8%83%E8%AE%A1%E5%88%92%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20subgraph%20%E5%95%86%E6%88%B7%E4%BF%A1%E6%81%AF%E4%B8%8E%E9%99%90%E9%A2%9D%0A%20%20%20%20%20%20%20%20A%5Broute_mech_info%3Cbr%3E%E6%94%B6%E6%AC%BE%E5%95%86%E6%88%B7%E4%BF%A1%E6%81%AF%E8%A1%A8%5D%0A%20%20%20%20%20%20%20%20F%5Broute_mech_quota_limit_record%3Cbr%3E%E5%95%86%E6%88%B7%E6%94%B6%E6%AC%BE%E9%A2%9D%E5%BA%A6%E8%AE%B0%E5%BD%95%E8%A1%A8%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20B%20--%3E%7Crule_code%3Cbr%3E%E8%A7%84%E5%88%99%E7%BC%96%E7%A0%81%7C%20D%0A%20%20%20%20E%20--%3E%7Crule_code%3Cbr%3E%E8%A7%84%E5%88%99%E7%BC%96%E7%A0%81%7C%20D%0A%20%20%20%20A%20--%3E%7Cmech_id%3Cbr%3E%E6%94%B6%E6%AC%BE%E5%95%86%E6%88%B7%E5%8F%B7%7C%20D%0A%20%20%20%20F%20--%3E%7Cmerchant_id%3Dmech_id%3Cbr%3E%E5%95%86%E6%88%B7%E5%8F%B7%3D%E6%94%B6%E6%AC%BE%E5%95%86%E6%88%B7%E5%8F%B7%7C%20A%0A"})]),fallback:d(()=>t[0]||(t[0]=[r(" Loading... ")])),_:1})),t[4]||(t[4]=i('<table tabindex="0"><thead><tr><th>表名</th><th>核心作用</th><th>关键关联字段</th></tr></thead><tbody><tr><td>route_mech_info</td><td>商户基础信息（商户号、限额、费率）</td><td>mech_id（唯一商户号）</td></tr><tr><td>route_mech_quota_limit_record</td><td>每日收款额度记录（限额控制、暂停 / 恢复）</td><td>merchant_id=mech_id</td></tr><tr><td>route_trade_rule</td><td>支付规则定义（规则编码、支付方式）</td><td>rule_code（唯一规则编码）</td></tr><tr><td>route_trade_rule_detail</td><td>规则条件详情（字段、运算符、值）</td><td>rule_code（关联主表）</td></tr><tr><td>route_pre_mapping</td><td>前置路由映射（优先级最高，直接指定规则）</td><td>payee_code=rule_code</td></tr><tr><td>route_trade_mapping</td><td>路由配置（规则→商户号→通道类型）</td><td>route_code+mech_id</td></tr><tr><td>route_trade_mapping_publish_plan</td><td>路由发布计划（延迟生效控制）</td><td>关联 route_trade_mapping 更新</td></tr></tbody></table><h2 id="路由核心逻辑" tabindex="-1">路由核心逻辑 <a class="header-anchor" href="#路由核心逻辑" aria-label="Permalink to &quot;路由核心逻辑&quot;">​</a></h2><p>关系核心： 所有路由配置围绕 rule_code（规则编码）和 mech_id（商户号）展开。</p><ul><li>前置映射表跳过规则匹配，直接指定 rule_code，提升匹配效率。</li><li>匹配规则采用支持SpEL的EasyRule引擎进行条件渲染和匹配。</li></ul><p>限额机制： 配置商户号收款限额，额度用尽时暂停路由，次日重置。</p><p>发布机制： 规则修改（route_trade_rule）实时生效，路由配置（route_trade_mapping）支持延迟生效，通过计划任务触发缓存刷新。</p>',6))])}const F=_(u,[["render",p]]);export{D as __pageData,F as default};
