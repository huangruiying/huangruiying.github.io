import{_ as a,c as i,o as e,a1 as n}from"./chunks/framework.CPsxJxQM.js";const c=JSON.parse('{"title":"危险，但好用","description":"","frontmatter":{},"headers":[],"relativePath":"常用小技巧/使用telnet操作Redis.md","filePath":"常用小技巧/使用telnet操作Redis.md"}'),t={name:"常用小技巧/使用telnet操作Redis.md"};function l(h,s,p,d,r,k){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="危险-但好用" tabindex="-1">危险，但好用 <a class="header-anchor" href="#危险-但好用" aria-label="Permalink to &quot;危险，但好用&quot;">​</a></h1><p>针对一些容器，没有redis-cli这种工具的，但是需要临时调整redis值的高危操作时使用，注意要谨慎！</p><h2 id="什么是telnet" tabindex="-1">什么是Telnet <a class="header-anchor" href="#什么是telnet" aria-label="Permalink to &quot;什么是Telnet&quot;">​</a></h2><p>相信大家不陌生了。Telnet是一个通用的网络协议工具，可以通过<code>TCP</code>连接到指定IP和端口，能够直接发送文本命令并接收响应。</p><h2 id="如何使用telnet连接到redis" tabindex="-1">如何使用Telnet连接到Redis <a class="header-anchor" href="#如何使用telnet连接到redis" aria-label="Permalink to &quot;如何使用Telnet连接到Redis&quot;">​</a></h2><p>由于Redis使用的协议RESP（Redis Serialization Protocol）基于纯文本，且该协议允许客户端通过TCP连接发送文本命令，所以Telnet可以直接连接到Redis并发送命令。</p><h3 id="连接到redis" tabindex="-1">连接到Redis <a class="header-anchor" href="#连接到redis" aria-label="Permalink to &quot;连接到Redis&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 发起连接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">telnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x.x.x.x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6379</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 需要权限验证的，要执行此步骤</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">auth</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xxxxxxxx</span></span></code></pre></div><h3 id="选择db" tabindex="-1">选择DB <a class="header-anchor" href="#选择db" aria-label="Permalink to &quot;选择DB&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 10</span></span></code></pre></div><h3 id="操作db的一些命令" tabindex="-1">操作DB的一些命令 <a class="header-anchor" href="#操作db的一些命令" aria-label="Permalink to &quot;操作DB的一些命令&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 写入数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KEY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> VALUE</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KEY</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看Redis服务器信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看Redis数据库中的所有键</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keys</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 退出Telnet连接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">quit</span></span></code></pre></div>`,12)]))}const g=a(t,[["render",l]]);export{c as __pageData,g as default};
