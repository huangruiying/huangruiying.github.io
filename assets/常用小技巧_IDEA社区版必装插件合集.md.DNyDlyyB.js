import{_ as s,c as t,o as i,a1 as e}from"./chunks/framework.BMsMDqYY.js";const u=JSON.parse('{"title":"没教育邮箱的，又不想花钱的，可以看过来了。","description":"","frontmatter":{},"headers":[],"relativePath":"常用小技巧/IDEA社区版必装插件合集.md","filePath":"常用小技巧/IDEA社区版必装插件合集.md"}'),n={name:"常用小技巧/IDEA社区版必装插件合集.md"};function h(o,a,l,p,r,k){return i(),t("div",null,a[0]||(a[0]=[e(`<h1 id="没教育邮箱的-又不想花钱的-可以看过来了。" tabindex="-1">没教育邮箱的，又不想花钱的，可以看过来了。 <a class="header-anchor" href="#没教育邮箱的-又不想花钱的-可以看过来了。" aria-label="Permalink to &quot;没教育邮箱的，又不想花钱的，可以看过来了。&quot;">​</a></h1><h2 id="http插件" tabindex="-1">HTTP插件 <a class="header-anchor" href="#http插件" aria-label="Permalink to &quot;HTTP插件&quot;">​</a></h2><p>HttpRequest，类似商业版的http工具，通过创建.http文件就能使用。唯一遗憾是没法像商业版那样一键转curl，不过自己准备个模版就好了</p><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">### 功能名称</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// curl -X POST --location &quot;http://localhost:8080/xxxx/xxxxx/refund&quot; -H &quot;Content-Type: application/json;charset=UTF-8&quot; -d &#39;{&quot;param1&quot;:&quot;v&quot;,&quot;param2&quot;:&quot;v&quot;,&quot;param3&quot;:11}&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 基础参数: {&quot;param1&quot;:&quot;v&quot;,&quot;param2&quot;:&quot;v&quot;,&quot;param3&quot;:11}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">POST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> http://localhost:8080/services/refund/refund</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Content-Type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> application/json;charset=UTF-8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;param1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;v&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;param2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;v&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;param3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="数据库客户端" tabindex="-1">数据库客户端 <a class="header-anchor" href="#数据库客户端" aria-label="Permalink to &quot;数据库客户端&quot;">​</a></h2><p>没发现啥好用的，我现在用的是DBeaver</p><h2 id="实体类copy成json格式" tabindex="-1">实体类copy成json格式 <a class="header-anchor" href="#实体类copy成json格式" aria-label="Permalink to &quot;实体类copy成json格式&quot;">​</a></h2><p>POJO to JSON</p><h2 id="画图工具" tabindex="-1">画图工具 <a class="header-anchor" href="#画图工具" aria-label="Permalink to &quot;画图工具&quot;">​</a></h2><p>PlantUML Integration</p><h2 id="对变量自动生成setter" tabindex="-1">对变量自动生成setter <a class="header-anchor" href="#对变量自动生成setter" aria-label="Permalink to &quot;对变量自动生成setter&quot;">​</a></h2><p>GenerateAllSetter</p><h2 id="lombok-不解释了直接上车" tabindex="-1">Lombok，不解释了直接上车 <a class="header-anchor" href="#lombok-不解释了直接上车" aria-label="Permalink to &quot;Lombok，不解释了直接上车&quot;">​</a></h2><h2 id="对象转化" tabindex="-1">对象转化 <a class="header-anchor" href="#对象转化" aria-label="Permalink to &quot;对象转化&quot;">​</a></h2><p>vo2dto，或者使用Mapstruct都行，看喜好</p>`,15)]))}const c=s(n,[["render",h]]);export{u as __pageData,c as default};
